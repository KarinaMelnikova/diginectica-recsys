import pandas as pd
from collections import defaultdict, Counter
from itertools import combinations
import os


def load_data(filepath: str) -> pd.DataFrame:
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞—Ç–∞—Å–µ—Ç DIGINETICA —Å –Ω—É–∂–Ω—ã–º–∏ –∫–æ–ª–æ–Ω–∫–∞–º–∏.
    """
    if not os.path.exists(filepath):
        raise FileNotFoundError(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {filepath}")

    df = pd.read_csv(filepath, sep=";", usecols=["sessionId", "itemId"])
    return df


def build_co_view_counts(df: pd.DataFrame) -> dict:
    """
    –°–æ–∑–¥–∞—ë—Ç —Å–ª–æ–≤–∞—Ä—å co-view —Å—á—ë—Ç—á–∏–∫–æ–≤: –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ - —Å–ø–∏—Å–æ–∫ —Å–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Å –∏—Ö —á–∞—Å—Ç–æ—Ç–æ–π.
    """
    session_groups = df.groupby("sessionId")["itemId"].apply(list)
    co_view = defaultdict(Counter)

    for items in session_groups:
        unique_items = list(set(items))
        for item_a, item_b in combinations(unique_items, 2):
            co_view[item_a][item_b] += 1
            co_view[item_b][item_a] += 1

    return co_view


def generate_recommendations(
    co_view: dict, top_k: int = 10, min_score: int = 5
) -> pd.DataFrame:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ co-view –¥–∞–Ω–Ω—ã—Ö.
    """
    rows = []

    for seed_item, rec_items in co_view.items():
        for rec_item, score in rec_items.most_common(top_k):
            if score >= min_score:
                rows.append((seed_item, rec_item, score))

    return pd.DataFrame(
        rows, columns=["seed_item_id", "recommended_product_id", "score"]
    )


def save_to_csv(df: pd.DataFrame, filename: str) -> None:
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –≤ CSV-—Ñ–∞–π–ª.
    """
    df.to_csv(filename, index=False)
    print(f"–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {filename}")


def main():
    input_path = "input_data/train-item-views.csv"
    output_path = "output_data/recommendations.csv"

    print("üì• –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...")
    df = load_data(input_path)

    print("üî¢ –ü–æ–¥—Å—á—ë—Ç —Å–æ–≤–º–µ—Å—Ç–Ω—ã—Ö –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤...")
    co_view_counts = build_co_view_counts(df)

    print("üß† –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π...")
    recommendations_df = generate_recommendations(co_view_counts)

    print("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...")
    save_to_csv(recommendations_df, output_path)

    print("‚úÖ –ì–æ—Ç–æ–≤–æ!")


if __name__ == "__main__":
    main()
